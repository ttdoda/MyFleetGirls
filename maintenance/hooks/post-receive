#!/bin/bash

set -u

lockfile=/tmp/myfleet_deploy_lock

exec 9>$lockfile

flock -w 0 -x 9 || {
    echo "duplicate process"
    exit 1
}

JAVA_HOME="$HOME/etc/soft/jdk1.8.0_45"
pid=server/target/universal/stage/RUNNING_PID
server_opt='-J-Xms768M -J-Xmx1280M -J-Xloggc:$myfleet_dir/gc.log -J-XX:+PrintGCDetails -J-XX:+PrintGCDateStamps -J-XX:+HeapDumpOnOutOfMemoryError -Dhttp.port='
port1=9003
port2=9004
nice='nice -n 19 ionice -c 3'
myfleet_base=$HOME/service/MyFleetGirls
orig_jar="client/target/scala-*/MyFleetGirls.jar"
pub_dir=server/public
pub_client=$pub_dir/client
pub_zip=$pub_dir/zip
pub_jar=$pub_client/MyFleetGirls.jar
pub_files='LICENSE update/{target/update.jar,update.properties,myfleetgirls.keystore} package/resources/* client/target/license-reports/myfleetgirls-licenses.html'
sbt=$HOME/etc/soft/bin/sbt

export JAVA_HOME

# pull
cd $myfleet_base/9003 && git --git-dir=.git pull
cd $myfleet_base/9004 && git --git-dir=.git pull

if [ `lsof -iTCP:${port1} | grep LISTEN | wc -l` -gt 0 ] ; then
    port=$port2
    kill_port=$port1
else
    port=$port1
    kill_port=$port2
fi

# Directory
myfleet_dir=$myfleet_base/$port
cd $myfleet_dir

# Kill old process
kill `cat $pid`
rm $pid

# zipped
$nice $sbt -java-home $JAVA_HOME assembly
$nice $sbt -java-home $JAVA_HOME dumpLicenseReport
if ! cmp -s $pub_jar $orig_jar ; then
    mv $pub_zip/MyFleetGirls.zip $pub_zip/MyFleetGirls.zip.old
    eval $nice zip -j $pub_zip/MyFleetGirls.zip $pub_files
    eval cp $orig_jar $pub_files $pub_client/
    eval pack200 -J-Xms128M -J-Xmx512M --gzip server/public/client/MyFleetGirls.jar.pack.gz server/public/client/MyFleetGirls.jar
fi

$nice $sbt -java-home $JAVA_HOME clean
$nice $sbt -java-home $JAVA_HOME stage
eval server/target/universal/stage/bin/myfleetgirlsserver $server_opt$port &

sleep 10
echo "Kill old process"
kill `cat ../$kill_port/$pid`
